{"uid":"9fddcc03360c5c58","name":"测试登录接口","fullName":"test_cases.api.test_login.TestLogin#test_login","historyId":"35d8ee3fa9dc259cd65dc29ff641b84d","time":{"start":1743861405806,"stop":1743861406035,"duration":229},"description":"\n        测试登录API接口\n        ","descriptionHtml":"<pre><code>    测试登录API接口\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: 响应中没有token字段\nassert 'token' in {'refresh': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0NDcyNTQwNiwiaWF0IjoxNzQzODYxNDA2LCJqdGkiOiI2YWQ1OTg0ODMzMjY0ZmYxYWVkZTZmMWU1NWE1ZmQ1ZCIsInVzZXJfaWQiOjF9.a__5ip_BLyU6ewsCSBytJUvmupuO9O_wKNA650p7p6E', 'access': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQzODYyMDA2LCJpYXQiOjE3NDM4NjE0MDYsImp0aSI6IjkyMjc5YWVkYmUyODQ0M2Q4YTExZWJlMTU1Mzc0YjgzIiwidXNlcl9pZCI6MX0.UF7HtxhUrkJtayigS3QQry06DhwQvi5a6dZAejuNndk'}","statusTrace":"self = <test_login.TestLogin object at 0x1041ee880>\n\n    @allure.story(\"用户登录\")\n    @allure.title(\"测试登录接口\")\n    def test_login(self):\n        \"\"\"\n        测试登录API接口\n        \"\"\"\n        # 设置请求URL和参数\n        url = \"http://localhost:8080/api/user/get_token/\"\n        payload = {\n            \"number\": \"001\",\n            \"password\": \"Lx123456\",\n            \"username\": \"admin\"\n        }\n    \n        # 添加测试步骤\n        with allure.step(\"发送登录请求\"):\n            allure.attach(json.dumps(payload, ensure_ascii=False, indent=2),\n                         \"请求参数\", allure.attachment_type.JSON)\n            response = requests.post(url, json=payload)\n    \n        # 记录响应结果\n        with allure.step(\"获取响应结果\"):\n            allure.attach(response.text, \"响应内容\", allure.attachment_type.TEXT)\n            allure.attach(str(response.status_code), \"状态码\", allure.attachment_type.TEXT)\n    \n        # 断言响应状态码\n        with allure.step(\"验证响应状态码\"):\n            assert response.status_code == 200, f\"登录失败，状态码: {response.status_code}\"\n    \n        # 断言响应内容\n        with allure.step(\"验证响应内容\"):\n            resp_data = response.json()\n>           assert \"token\" in resp_data, \"响应中没有token字段\"\nE           AssertionError: 响应中没有token字段\nE           assert 'token' in {'refresh': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0NDcyNTQwNiwiaWF0IjoxNzQzODYxNDA2LCJqdGkiOiI2YWQ1OTg0ODMzMjY0ZmYxYWVkZTZmMWU1NWE1ZmQ1ZCIsInVzZXJfaWQiOjF9.a__5ip_BLyU6ewsCSBytJUvmupuO9O_wKNA650p7p6E', 'access': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQzODYyMDA2LCJpYXQiOjE3NDM4NjE0MDYsImp0aSI6IjkyMjc5YWVkYmUyODQ0M2Q4YTExZWJlMTU1Mzc0YjgzIiwidXNlcl9pZCI6MX0.UF7HtxhUrkJtayigS3QQry06DhwQvi5a6dZAejuNndk'}\n\ntest_cases/api/test_login.py:46: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"\n        测试登录API接口\n        ","status":"failed","statusMessage":"AssertionError: 响应中没有token字段\nassert 'token' in {'refresh': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0NDcyNTQwNiwiaWF0IjoxNzQzODYxNDA2LCJqdGkiOiI2YWQ1OTg0ODMzMjY0ZmYxYWVkZTZmMWU1NWE1ZmQ1ZCIsInVzZXJfaWQiOjF9.a__5ip_BLyU6ewsCSBytJUvmupuO9O_wKNA650p7p6E', 'access': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQzODYyMDA2LCJpYXQiOjE3NDM4NjE0MDYsImp0aSI6IjkyMjc5YWVkYmUyODQ0M2Q4YTExZWJlMTU1Mzc0YjgzIiwidXNlcl9pZCI6MX0.UF7HtxhUrkJtayigS3QQry06DhwQvi5a6dZAejuNndk'}","statusTrace":"self = <test_login.TestLogin object at 0x1041ee880>\n\n    @allure.story(\"用户登录\")\n    @allure.title(\"测试登录接口\")\n    def test_login(self):\n        \"\"\"\n        测试登录API接口\n        \"\"\"\n        # 设置请求URL和参数\n        url = \"http://localhost:8080/api/user/get_token/\"\n        payload = {\n            \"number\": \"001\",\n            \"password\": \"Lx123456\",\n            \"username\": \"admin\"\n        }\n    \n        # 添加测试步骤\n        with allure.step(\"发送登录请求\"):\n            allure.attach(json.dumps(payload, ensure_ascii=False, indent=2),\n                         \"请求参数\", allure.attachment_type.JSON)\n            response = requests.post(url, json=payload)\n    \n        # 记录响应结果\n        with allure.step(\"获取响应结果\"):\n            allure.attach(response.text, \"响应内容\", allure.attachment_type.TEXT)\n            allure.attach(str(response.status_code), \"状态码\", allure.attachment_type.TEXT)\n    \n        # 断言响应状态码\n        with allure.step(\"验证响应状态码\"):\n            assert response.status_code == 200, f\"登录失败，状态码: {response.status_code}\"\n    \n        # 断言响应内容\n        with allure.step(\"验证响应内容\"):\n            resp_data = response.json()\n>           assert \"token\" in resp_data, \"响应中没有token字段\"\nE           AssertionError: 响应中没有token字段\nE           assert 'token' in {'refresh': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0NDcyNTQwNiwiaWF0IjoxNzQzODYxNDA2LCJqdGkiOiI2YWQ1OTg0ODMzMjY0ZmYxYWVkZTZmMWU1NWE1ZmQ1ZCIsInVzZXJfaWQiOjF9.a__5ip_BLyU6ewsCSBytJUvmupuO9O_wKNA650p7p6E', 'access': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQzODYyMDA2LCJpYXQiOjE3NDM4NjE0MDYsImp0aSI6IjkyMjc5YWVkYmUyODQ0M2Q4YTExZWJlMTU1Mzc0YjgzIiwidXNlcl9pZCI6MX0.UF7HtxhUrkJtayigS3QQry06DhwQvi5a6dZAejuNndk'}\n\ntest_cases/api/test_login.py:46: AssertionError","steps":[{"name":"发送登录请求","time":{"start":1743861405806,"stop":1743861406033,"duration":227},"status":"passed","steps":[],"attachments":[{"uid":"9a3f9bfbf640ee77","name":"请求参数","source":"9a3f9bfbf640ee77.json","type":"application/json","size":70}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},{"name":"获取响应结果","time":{"start":1743861406033,"stop":1743861406034,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"16514ce0101f2546","name":"响应内容","source":"16514ce0101f2546.txt","type":"text/plain","size":483},{"uid":"9f4724aa2424992","name":"状态码","source":"9f4724aa2424992.txt","type":"text/plain","size":3}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"验证响应状态码","time":{"start":1743861406034,"stop":1743861406034,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"验证响应内容","time":{"start":1743861406034,"stop":1743861406034,"duration":0},"status":"failed","statusMessage":"AssertionError: 响应中没有token字段\nassert 'token' in {'refresh': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0NDcyNTQwNiwiaWF0IjoxNzQzODYxNDA2LCJqdGkiOiI2YWQ1OTg0ODMzMjY0ZmYxYWVkZTZmMWU1NWE1ZmQ1ZCIsInVzZXJfaWQiOjF9.a__5ip_BLyU6ewsCSBytJUvmupuO9O_wKNA650p7p6E', 'access': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQzODYyMDA2LCJpYXQiOjE3NDM4NjE0MDYsImp0aSI6IjkyMjc5YWVkYmUyODQ0M2Q4YTExZWJlMTU1Mzc0YjgzIiwidXNlcl9pZCI6MX0.UF7HtxhUrkJtayigS3QQry06DhwQvi5a6dZAejuNndk'}\n","statusTrace":"  File \"/Users/Apple/PycharmProjects/himool_auto_case/test_cases/api/test_login.py\", line 46, in test_login\n    assert \"token\" in resp_data, \"响应中没有token字段\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"story","value":"用户登录"},{"name":"epic","value":"API测试"},{"name":"feature","value":"用户管理"},{"name":"parentSuite","value":"test_cases.api"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"MacBook-Pro.local"},{"name":"thread","value":"92208-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.api.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"9fddcc03360c5c58.json","parameterValues":[]}